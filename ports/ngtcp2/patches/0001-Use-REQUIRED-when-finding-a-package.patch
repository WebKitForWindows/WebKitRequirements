From bc5996d0abe310a551690052b8a721b404a4846e Mon Sep 17 00:00:00 2001
From: Don Olmstead <don.j.olmstead@gmail.com>
Date: Wed, 16 Oct 2024 14:46:31 -0700
Subject: [PATCH] Use REQUIRED when finding a package

If an `ENABLE` option is `ON` and requires a package to be present it should fail the build if its not found. OpenSSL is still detected for the picotls backend but the OpenSSL backend will not be compiled out unless it was explicitly requested.

Update the Windows GitHub Action build to set `ENABLE_OPENSSL` to `OFF` since an appropriate OpenSSL installation is not present.
---
 CMakeLists.txt              | 48 +++++++++++++++++++------------------
 2 files changed, 26 insertions(+), 24 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index b6e1faf2..cbfaa5ff 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -117,16 +117,16 @@ if(NOT CMAKE_C_COMPILER_ID MATCHES "MSVC")
 endif()
 
 if(ENABLE_GNUTLS)
-  find_package(GnuTLS 3.7.2)
+  find_package(GnuTLS 3.7.2 REQUIRED)
 endif()
-if(ENABLE_OPENSSL)
-  find_package(OpenSSL 1.1.1)
+if(ENABLE_OPENSSL OR ENABLE_PICOTLS)
+  find_package(OpenSSL 1.1.1 REQUIRED)
 endif()
 if(ENABLE_WOLFSSL)
-  find_package(wolfssl 5.5.0)
+  find_package(wolfssl 5.5.0 REQUIRED)
 endif()
 if(ENABLE_JEMALLOC)
-  find_package(Jemalloc)
+  find_package(Jemalloc REQUIRED)
 endif()
 find_package(Libev 4.11)
 find_package(Libnghttp3 1.0.0)
@@ -138,25 +138,27 @@ add_custom_target(check COMMAND ${CMAKE_CTEST_COMMAND})
 # OpenSSL (required for libngtcp2_crypto_quictls,
 # libngtcp2_crypto_picotls and examples)
 include(CheckSymbolExists)
-if(ENABLE_OPENSSL AND OPENSSL_FOUND)
+if(OPENSSL_FOUND)
   set(VANILLA_OPENSSL_INCLUDE_DIRS ${OPENSSL_INCLUDE_DIR})
   set(VANILLA_OPENSSL_LIBRARIES ${OPENSSL_LIBRARIES})
   set(HAVE_VANILLA_OPENSSL TRUE)
 
   # Until OpenSSL gains mainline support for QUIC, check for a patched version.
-  cmake_push_check_state()
-  set(CMAKE_REQUIRED_INCLUDES   "${OPENSSL_INCLUDE_DIR}")
-  set(CMAKE_REQUIRED_LIBRARIES  "${OPENSSL_LIBRARIES}")
-  if(WIN32)
-    set(CMAKE_REQUIRED_LIBRARIES "${CMAKE_REQUIRED_LIBRARIES}" "ws2_32" "bcrypt")
-  endif()
-  check_symbol_exists(SSL_provide_quic_data "openssl/ssl.h" HAVE_SSL_PROVIDE_QUIC_DATA)
-  if(NOT HAVE_SSL_PROVIDE_QUIC_DATA)
-    message(WARNING "Disabling OpenSSL due to lack of QUIC support in ${OPENSSL_LIBRARIES}")
+  if(ENABLE_OPENSSL)
+    cmake_push_check_state()
+    set(CMAKE_REQUIRED_INCLUDES   "${OPENSSL_INCLUDE_DIR}")
+    set(CMAKE_REQUIRED_LIBRARIES  "${OPENSSL_LIBRARIES}")
+    if(WIN32)
+      set(CMAKE_REQUIRED_LIBRARIES "${CMAKE_REQUIRED_LIBRARIES}" "ws2_32" "bcrypt")
+    endif()
+    check_symbol_exists(SSL_provide_quic_data "openssl/ssl.h" HAVE_SSL_PROVIDE_QUIC_DATA)
+    if(NOT HAVE_SSL_PROVIDE_QUIC_DATA)
+      message(FATAL_ERROR "Unable to build OpenSSL backend due to lack of QUIC support in ${OPENSSL_LIBRARIES}")
+    endif()
+    cmake_pop_check_state()
   endif()
-  cmake_pop_check_state()
 endif()
-if(ENABLE_OPENSSL AND HAVE_SSL_PROVIDE_QUIC_DATA)
+if(ENABLE_OPENSSL)
   set(OPENSSL_INCLUDE_DIRS  ${OPENSSL_INCLUDE_DIR})
   set(HAVE_OPENSSL TRUE)
   set(HAVE_CRYPTO TRUE)
@@ -174,11 +176,11 @@ if(ENABLE_BORINGSSL)
   set(CMAKE_REQUIRED_LIBRARIES  "${BORINGSSL_LIBRARIES}")
   check_cxx_symbol_exists(SSL_set_quic_early_data_context "openssl/ssl.h" HAVE_SSL_SET_QUIC_EARLY_DATA_CONTEXT)
   if(NOT HAVE_SSL_SET_QUIC_EARLY_DATA_CONTEXT)
-    message(WARNING "Disabling BoringSSL due to lack of QUIC support in ${BORINGSSL_LIBRARIES}")
+    message(FATAL_ERROR "Unable to build BoringSSL backend due to lack of QUIC support in ${BORINGSSL_LIBRARIES}")
   endif()
   cmake_pop_check_state()
 endif()
-if(ENABLE_BORINGSSL AND HAVE_SSL_SET_QUIC_EARLY_DATA_CONTEXT)
+if(ENABLE_BORINGSSL)
   set(BORINGSSL_INCLUDE_DIRS  ${BORINGSSL_INCLUDE_DIR})
   set(HAVE_BORINGSSL TRUE)
   set(HAVE_CRYPTO TRUE)
@@ -196,7 +198,7 @@ set(HAVE_LIBEV      ${LIBEV_FOUND})
 set(HAVE_LIBNGHTTP3 ${LIBNGHTTP3_FOUND})
 
 # GnuTLS (required for libngtcp2_crypto_gnutls)
-if(ENABLE_GNUTLS AND GNUTLS_FOUND)
+if(ENABLE_GNUTLS)
   set(GNUTLS_INCLUDE_DIRS  ${GNUTLS_INCLUDE_DIR})
   set(HAVE_GNUTLS TRUE)
   set(HAVE_CRYPTO TRUE)
@@ -214,11 +216,11 @@ if(ENABLE_PICOTLS)
   check_symbol_exists(ptls_openssl_random_bytes "picotls.h;picotls/openssl.h"
     HAVE_PTLS_OPENSSL_RANDOM_BYTES)
   if(NOT HAVE_PTLS_OPENSSL_RANDOM_BYTES)
-    message(WARNING "Disabling Picotls because ptls_openssl_random_bytes not found in ${CMAKE_REQUIRED_LIBRARIES}")
+    message(FATAL_ERROR "Unable to build Picotls backend because ptls_openssl_random_bytes not found in ${CMAKE_REQUIRED_LIBRARIES}")
   endif()
   cmake_pop_check_state()
 endif()
-if(ENABLE_PICOTLS AND HAVE_PTLS_OPENSSL_RANDOM_BYTES)
+if(ENABLE_PICOTLS)
   set(PICOTLS_INCLUDE_DIRS  ${PICOTLS_INCLUDE_DIR})
   set(HAVE_PICOTLS TRUE)
   set(HAVE_CRYPTO TRUE)
@@ -229,7 +231,7 @@ else()
 endif()
 
 # wolfSSL (required for libngtcp2_crypto_wolfssl)
-if(ENABLE_WOLFSSL AND WOLFSSL_FOUND)
+if(ENABLE_WOLFSSL)
   set(WOLFSSL_INCLUDE_DIRS  ${WOLFSSL_INCLUDE_DIR})
   set(HAVE_WOLFSSL TRUE)
   set(HAVE_CRYPTO TRUE)
-- 
2.47.0.windows.1
